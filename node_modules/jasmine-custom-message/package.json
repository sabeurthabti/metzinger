{
  "name": "jasmine-custom-message",
  "description": "custom failure message on any jasmine assertion",
  "version": "0.7.2",
  "homepage": "https://github.com/avrelian/jasmine-custom-message",
  "author": {
    "name": "Sergey Radchenko",
    "email": "avrelian@yandex.ru",
    "url": "https://github.com/avrelian"
  },
  "repository": {
    "type": "git",
    "url": "git@github.com:avrelian/jasmine-custom-message.git"
  },
  "bugs": {
    "url": "https://github.com/avrelian/jasmine-custom-message/issues"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "https://github.com/avrelian/jasmine-custom-message/blob/master/LICENSE"
    }
  ],
  "main": "jasmine-custom-message.js",
  "engines": {
    "node": ">= 0.8.0"
  },
  "scripts": {
    "test": "grunt test"
  },
  "devDependencies": {
    "grunt-contrib-jshint": "~0.6.0",
    "grunt": "~0.4.2",
    "grunt-jasmine-node": "~0.1.0",
    "diff": "~1.0.8"
  },
  "peerDependencies": {
    "grunt": "~0.4.2"
  },
  "keywords": [
    "jasmine",
    "error message",
    "failure message",
    "custom message"
  ],
  "readme": "jasmine-custom-message\n======================\n> **works with `jasmine v2.0.0`** (for work with `jasmine v1.3.1` see [master](https://github.com/avrelian/jasmine-custom-message) branch)\n\n\nThis script makes it possible to use your own failure message on any jasmine assertion.\n\n#### Example\n\n```\ndescribe('the story', function() {\n  it('should finish ok', function() {\n    since('all cats are grey in the dark').\n    expect('tiger').toEqual('kitty'); // => 'all cats are grey in the dark'\n  });\n});\n```\n\n\n## Simple\n\nAll the magic happens in `since` function. That returns an object with a property `expect`. That contains no more than a wrapped jasmine `expect` function. That returns jasmine `expectation` object with a wrapped `addExpectationResult` function. That can replace an ordinary jasmine failure message with a newly generated one. That is generating based on a custom message you have supplied to `since` function as the first argument. That can be a primitive (except `null` and `undefined`), a function, or any other object. That is it.\n\n#### Example\n\n```\ndescribe('test', function() {\n  it('should be ok', function() {\n    since(function() {\n      return {'tiger': 'kitty'};\n    }).\n    expect(3).toEqual(4); // => '{\"tiger\":\"kitty\"}'\n  });\n});\n```\n\n\n## Unobtrusive\n\nYou can use jasmine as you did before, since `jasmine-custom-message` does not replace global jasmine `expect` function.\n\n#### Example\n\n```\ndescribe('test', function() {\n  it('should be ok', function() {\n    expect(3).toEqual(4); // => ordinary jasmine message\n  });\n});\n```\n\n\n## Powerful\n\nYou can use expected and actual value of the assertion in your custom message.\n\n#### Example\n\n```\ndescribe('test', function() {\n  it('should be ok', function() {\n    since(function() {\n      return this.actual + ' =/= ' + this.expected;\n    }).\n    expect(3).toEqual(4); // => '3 =/= 4'\n  });\n});\n```\n\n## Front-end usage\n*  install the bower package from github\n```\nbower install jasmine-custom-message#61004b01fca2c46e3fdcfa93aaed8f547c049938 --save-dev\n```\n* include `jasmine-custom-message.js` into your HTML file next to `jasmine` script\n```\n<script src=\"PATH-TO/jasmine.js\"></script>\n<script src=\"PATH-TO/jasmine-custom-message.js\"></script>\n```\n\n## Node.js usage\n\n*  install the bower package from github\n```\nbower install jasmine-custom-message#61004b01fca2c46e3fdcfa93aaed8f547c049938 --save-dev\n```\n\n*  require it in your spec file before your tests\n```\nrequire('jasmine-custom-message');\n```\n\n## Change log\n\n`v0.6.0` - 2014.01.18 - **BROKEN COMPATIBILITY!**\n  * all the magic moved into newly introduced `since` function\n  * restored automatic initiation of the script upon inclusion (browser) or require (Node.js)\n  * cleaned specs\n\n`v0.5.0` - 2014.01.15\n  * added support for nested message functions\n  * dropped automatic wrapping of jasmine `it` and `expect` functions in browsers\n  * added specs for Node.js\n  * added specs for browsers\n  * registered bower package\n  * made disambiguation and readability improvements\n\n`v0.2.0` - 2014.01.10\n  * BROKEN COMPATIBILITY: custom messages is supplied as the third argument for jasmine `it` function\n\n`v0.1.0` - 2014.01.08\n  * the first functional version  \n\n\n## Release plan\n\n`v0.6.0` - some new features (based on requests from Issues)\n\n\n[![Bitdeli Badge](https://d2weczhvl823v0.cloudfront.net/avrelian/jasmine-custom-message/trend.png)](https://bitdeli.com/free \"Bitdeli Badge\")\n",
  "readmeFilename": "README.md",
  "_id": "jasmine-custom-message@0.7.2",
  "_shasum": "99a7d42b33841dfb49855487cbc11b41ec817dfb",
  "_resolved": "git://github.com/avrelian/jasmine-custom-message#b33f3b1c9e39b74c95b841dfff57af778a45ab49",
  "_from": "git://github.com/avrelian/jasmine-custom-message#jasmine-2-0"
}
